<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="para.request">
	
	<!-- 주문 상태 업데이트 -->
	<update id="updateOscode" parameterType="RequestDto">
		UPDATE REQUEST SET OS_CODE=#{os_code}
		WHERE STORE_CODE=#{store_code} AND REQUEST_SEQ=#{request_seq}
	</update>

	<!-- 주문 완료,환불 내역 전체 조회 -->
	<select id="requestList" parameterType="java.util.Map" resultType="RequestDto">
	SELECT ROWNUM RNUM,REQUEST_SEQ,REQUEST_MENU,REQUEST_PRICE,REQUEST_TIME,
		REQUEST_BANK,REQUEST_ACCOUNT,STORE_CODE,OS_CODE 
		FROM( SELECT REQUEST_SEQ,REQUEST_MENU,REQUEST_PRICE,REQUEST_TIME,
				REQUEST_BANK,REQUEST_ACCOUNT,STORE_CODE,OS_CODE
				FROM REQUEST 
				WHERE STORE_CODE=#{store_code} AND 
				<choose>
					<when test="os_code != null">
					OS_CODE=#{os_code}
					</when>
					<otherwise>
					(OS_CODE=3 OR OS_CODE=0)
					</otherwise>
				</choose> 
				AND (REQUEST_TIME BETWEEN #{start} AND SYSDATE+1)
				ORDER BY REQUEST_TIME) ORDER BY REQUEST_TIME DESC
	</select>
	
	<!-- 주문 완료,환불 내역 상세 조회 -->
	<select id="requestDetail" parameterType="RequestDto" resultType="RequestDto">
	SELECT REQUEST_SEQ,REQUEST_MENU,REQUEST_PRICE,REQUEST_TIME,
				REQUEST_BANK,REQUEST_ACCOUNT,STORE_CODE,OS_CODE
				FROM REQUEST 
				WHERE STORE_CODE=#{store_code} AND 
				OS_CODE=#{os_code} AND REQUEST_SEQ = #{request_seq}
	</select>
				
	<!-- 주문상태가 대기 중인 주문 조회 -->
	<select id="requestListWait" parameterType="java.util.Map" resultType="RequestDto">
	SELECT RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
			FROM(SELECT ROWNUM RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
				FROM(SELECT  REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
					FROM REQUEST 
					WHERE STORE_CODE = #{store_code} AND (REQUEST_TIME BETWEEN #{start} AND (SELECT TO_DATE(#{start},'YYYYMMDD')+1 FROM DUAL))
					ORDER BY REQUEST_TIME))
			WHERE OS_CODE= 1
	</select>
	
	<!-- 주문상태가 대기 중인 주문 상세 조회 -->
	<select id="requestDetailWait" parameterType="RequestDto" resultType="RequestDto">
	SELECT RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
			FROM(SELECT ROWNUM RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
				FROM(SELECT REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
					FROM REQUEST 
					WHERE STORE_CODE = #{store_code}))
			WHERE OS_CODE= 1 AND REQUEST_SEQ=#{request_seq}
	</select>
	
	<!-- 주문상태가 제조 중인 주문 조회 -->
	<select id="requestListMake" parameterType="java.util.Map" resultType="RequestDto">
	SELECT RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
			FROM(SELECT ROWNUM RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
				FROM(SELECT REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
					FROM REQUEST 
					WHERE STORE_CODE = #{store_code}  AND (REQUEST_TIME BETWEEN #{start} AND (SELECT TO_DATE(#{start},'YYYYMMDD')+1 FROM DUAL)) 
					ORDER BY REQUEST_TIME))
			WHERE OS_CODE= 2
	</select>
	
	<!-- 주문상태가 제조 중인 주문 상세 조회 -->
	<select id="requestDetailMake" parameterType="RequestDto" resultType="RequestDto">
	SELECT RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
			FROM(SELECT ROWNUM RNUM,REQUEST_SEQ, REQUEST_MENU, REQUEST_TIME,OS_CODE 
				FROM(SELECT REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
					FROM REQUEST 
					WHERE STORE_CODE = #{store_code}))
			WHERE OS_CODE= 2 AND REQUEST_SEQ=#{request_seq}
	</select>
	
	<!-- 고객 주문 시 주문 등록 -->
	<insert id="customOrder" parameterType="RequestDto">
	<selectKey keyProperty="request_seq" order="BEFORE" resultType="java.lang.Integer">
 	 select REQUEST_SEQ.NEXTVAL as REQUEST_SEQ from dual
 	</selectKey>
	INSERT INTO REQUEST (REQUEST_SEQ, REQUEST_TIME, REQUEST_MENU, REQUEST_PRICE, OS_CODE, STORE_CODE, REQUEST_BANK, REQUEST_ACCOUNT) 
	VALUES(#{request_seq}, SYSDATE, #{request_menu}, #{request_price}, 1, #{store_code}, #{request_bank}, #{request_account})
	</insert>
	
	<!-- 고객 주문 시 대기중 조회 -->
	<select id="requestCustomWait" parameterType="java.util.Map" resultType="RequestDto">
	SELECT RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
			FROM(SELECT ROWNUM RNUM, REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
				FROM(SELECT REQUEST_SEQ,REQUEST_MENU, REQUEST_TIME,OS_CODE 
					FROM REQUEST 
					WHERE STORE_CODE = #{store_code} AND REQUEST_TIME BETWEEN #{start} AND SYSDATE+1))
			WHERE OS_CODE= 1 AND REQUEST_SEQ=#{request_seq}
	</select>
	
	<!-- 메뉴 번호에 따른 메뉴이름 찾기 -->
	<select id="requestMenuName" parameterType="java.util.Map" resultType="MenuDto">
	SELECT MENU_NAME FROM MENU WHERE MENU_SEQ IN 
	<foreach item="menu_seq" collection="menu_seq_"
		open="(" separator="," close=")">
		#{menu_seq}
	</foreach>
	</select>
	
	<!-- 페이징 -->
	<select id="requestListPaging" parameterType="java.util.Map" resultType="RequestDto">
		SELECT RNUM ,REQUEST_SEQ,REQUEST_MENU,REQUEST_PRICE,REQUEST_TIME,
				REQUEST_BANK,REQUEST_ACCOUNT,STORE_CODE,OS_CODE
		FROM(
			SELECT ROW_NUMBER() OVER  (ORDER BY REQUEST_TIME DESC) AS R, ROW_NUMBER() OVER (ORDER BY REQUEST_TIME) AS RNUM, 
					REQUEST_SEQ,REQUEST_MENU,REQUEST_PRICE,REQUEST_TIME,
					REQUEST_BANK,REQUEST_ACCOUNT,STORE_CODE,OS_CODE
				FROM(
					SELECT REQUEST_SEQ,REQUEST_MENU,REQUEST_PRICE,REQUEST_TIME,
							REQUEST_BANK,REQUEST_ACCOUNT,STORE_CODE,OS_CODE
						FROM REQUEST 
						WHERE 
						<choose>
							<when test="os_code != null">
							OS_CODE=#{os_code}
							</when>
							<otherwise>
							(OS_CODE=3 OR OS_CODE=0)
							</otherwise>
						</choose>
						 AND STORE_CODE=#{store_code}
						AND (REQUEST_TIME BETWEEN #{dayStart} AND SYSDATE+1)
						ORDER BY REQUEST_TIME DESC))
		WHERE R BETWEEN #{pageStart} AND #{pageEnd}
	</select>
	
	<!-- 전체 주문 갯수 (다이나믹으로 완료,환불 주문 갯수만 체크할 수 있게함)-->
	<select id="selectTotalRequest" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM REQUEST WHERE STORE_CODE = #{store_code}
		<if test="os_code != null">
			AND OS_CODE = #{os_code}
		</if>
	</select>
	
</mapper>
