<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="para.pao">
 	
 	<resultMap id="ItemDto" type="ItemDto">
 		<result property="item_seq" column="ITEM_SEQ" />
		<result property="item_name" column="ITEM_NAME" />
		<result property="item_price" column="ITEM_PRICE" />
	</resultMap>
 	
	<resultMap id="StockDto" type="StockDto">
		<result property="stock_seq" column="STOCK_SEQ" />
		<result property="store_code" column="STORE_CODE" />
		<result property="stock_name" column="STOCK_NAME" />
		<result property="stock_qty" column="STOCK_QTY" />
		<association property="itemDto" resultMap="ItemDto"/>
	</resultMap>

	
	<!-- 업주 : 매장 발주 내역 조회 -->
	<!-- 
	<select id="paoList" parameterType="java.lang.String" resultType="PaoDto">
		SELECT PAO_SEQ, STORE_CODE, STORE_NAME, PS_NAME, PAO_DATE
		FROM PAOINFO
		WHERE STORE_CODE = #{store_code}
		ORDER BY (CASE PS_NAME WHEN '발주 승인' THEN 1 WHEN '발주 대기' THEN 2 WHEN '발주 취소' THEN 3 ELSE 4 END), PAO_SEQ DESC
	</select>
	 -->
	 
	<!-- 업주 : 매장 발주 내역 조회(페이징) -->
	<select id="paoList" parameterType="java.util.Map" resultType="PaoDto">
		SELECT RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY (CASE PS_NAME WHEN '발주 승인' THEN 1 WHEN '발주 대기' THEN 2 WHEN '발주 취소' THEN 3 ELSE 4 END), PAO_SEQ DESC) RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
	 		 FROM PAOINFO
	 		 WHERE STORE_CODE = #{store_code}
			)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 업주 : 매장 발주 내역 갯수(페이징) -->
	<select id="paoListRow" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM PAOINFO
		WHERE STORE_CODE = #{store_code}
	</select>
	
	<!-- 담당자 : 매장 발주 내역 조회 -->
	<!-- 
	<select id="adminPaoList" parameterType="java.lang.String" resultType="PaoDto">
		SELECT PAO_SEQ, STORE_CODE, STORE_NAME, PS_NAME, PAO_DATE
		FROM PAOINFO
		WHERE SUBSTR(STORE_CODE, 1, INSTR(STORE_CODE, '_', 1)-1) = #{store_code}
		ORDER BY (CASE PS_NAME WHEN '발주 대기' THEN 1 WHEN '발주 승인' THEN 2 WHEN '발주 취소' THEN 3 ELSE 4 END), PAO_SEQ DESC
	</select>
	 -->
	<!-- 담당자 : 담장 지역의 매장 발주 내역 조회(페이징) -->
	<select id="adminPaoList" parameterType="java.util.Map" resultType="PaoDto">
		SELECT RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY (CASE PS_NAME WHEN '발주 대기' THEN 1 WHEN '발주 승인' THEN 2 WHEN '발주 취소' THEN 3 ELSE 4 END), PAO_SEQ DESC) RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
	 		 FROM PAOINFO
	 		 WHERE SUBSTR(STORE_CODE, 1, INSTR(STORE_CODE, '_', 1)-1) = #{store_code}
			 )
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 담당자 : 담당 지역의 매장 발주 내역 갯수(페이징) -->
	<select id="adminPaoListRow" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM PAOINFO
		WHERE SUBSTR(STORE_CODE, 1, INSTR(STORE_CODE, '_', 1)-1) = #{store_code}
	</select>
	
	<!-- 업주 : 매장 발주 상태 선택 조회 및 매장 발주 날짜 선택 조회-->
	<select id="paoSelectStatusDate" parameterType="java.util.Map" resultType="PaoDto">
		SELECT RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY (CASE PS_NAME WHEN '발주 승인' THEN 1 WHEN '발주 대기' THEN 2 WHEN '발주 취소' THEN 3 ELSE 4 END), PAO_SEQ DESC) RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
			 FROM PAOINFO
			 WHERE STORE_CODE = #{store_code} AND
				 PS_CODE IN
				 <foreach collection="status_list" item="status" separator="," open="(" close=")">
					 #{status}
				 </foreach>
				 AND
				 <![CDATA[
		        	 PAO_DATE >= #{startDate} AND PAO_DATE <= #{endDate}
		    	 ]]>
		    )
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 담당자 : 매장 발주 상태 선택 조회 및 매장 발주 날짜 선택 조회-->
	<select id="adimPaoSelectStatusDate" parameterType="java.util.Map" resultType="PaoDto">
		SELECT RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY (CASE PS_NAME WHEN '발주 대기' THEN 1 WHEN '발주 승인' THEN 2 WHEN '발주 취소' THEN 3 ELSE 4 END), PAO_SEQ DESC) RNUM, PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
			 FROM PAOINFO
			 WHERE SUBSTR(STORE_CODE, 1, INSTR(STORE_CODE, '_', 1)-1) = #{store_code} AND
				 PS_CODE IN
				 <foreach collection="status_list" item="status" separator="," open="(" close=")">
					 #{status}
				 </foreach>
				 AND
				 <![CDATA[
		        	 PAO_DATE >= #{startDate} AND PAO_DATE <= #{endDate}
		    	 ]]>
		    )
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 업주 : 매장 발주 상태 선택 조회 및 매장 발주 날짜 선택 조회한 발주 내역 갯수(페이징) -->
	<select id="paoStatusListRow" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM PAOINFO
		WHERE STORE_CODE = #{store_code} AND
				 PS_CODE IN
				 <foreach collection="status_list" item="status" separator="," open="(" close=")">
					 #{status}
				 </foreach>
				 AND
				 <![CDATA[
		        	 PAO_DATE >= #{startDate} AND PAO_DATE <= #{endDate}
		    	 ]]>
	</select>
	
	<!-- 담당자 : 매장 발주 상태 선택 조회 및 매장 발주 날짜 선택 조회한 발주 내역 갯수(페이징) -->
	<select id="adminPaoStatusListRow" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM PAOINFO
		WHERE SUBSTR(STORE_CODE, 1, INSTR(STORE_CODE, '_', 1)-1) = #{store_code} AND
				 PS_CODE IN
				 <foreach collection="status_list" item="status" separator="," open="(" close=")">
					 #{status}
				 </foreach>
				 AND
				 <![CDATA[
		        	 PAO_DATE >= #{startDate} AND PAO_DATE <= #{endDate}
		    	 ]]>
	</select>
	 
	<!-- 업주 : 발주 상세보기(발주) -->
	<select id="paoDetail" parameterType="java.util.Map" resultType="PaoDto">
		SELECT PAO_SEQ, STORE_CODE, STORE_NAME, PS_CODE, PS_NAME, PAO_DATE
		FROM PAOINFO
		WHERE STORE_CODE = #{store_code} AND PAO_SEQ = #{pao_seq}
	</select>
	
	<!-- 업주 : 발주 상세보기(발주품목) -->
	<select id="paoPiDetail" parameterType="java.lang.String" resultType="ItemDto">
		SELECT PI_SEQ, ITEM_NAME, PI_QTY, ITEM_PRICE, PAO_SEQ
		FROM PAO_ITEM JOIN ITEM ON PAO_ITEM.ITEM_SEQ = ITEM.ITEM_SEQ
		WHERE PAO_SEQ = #{pao_seq}
	</select>
	

	<!-- 업주 : 발주 신청 시 재고 목록 조회 -->
	<select id="paoStockList" parameterType="java.lang.String" resultMap="StockDto">
		SELECT STOCK_SEQ, STORE_CODE, STOCK_NAME, STOCK_QTY, ITEM.ITEM_SEQ, ITEM.ITEM_PRICE
		FROM STOCK JOIN ITEM ON STOCK.STOCK_NAME = ITEM.ITEM_NAME
		WHERE STORE_CODE = #{store_code}
		AND ITEM.ITEM_DELFLAG = 'N'
		ORDER BY STOCK_NAME
	</select>
	
	<!-- 업주 : 발주 신청(발주 테이블 INSERT) -->
	<insert id="paoInsert" parameterType="java.util.Map">
 		INSERT INTO PAO(PAO_SEQ, PAO_DATE, STORE_CODE, PS_CODE) VALUES(PAO_SEQ.NEXTVAL, SYSDATE, #{store_code}, 1)
  	</insert>
	
	<!-- 업주 : 발주 신청(발주 품목 테이블 INSERT) -->
	<insert id="piInsert" parameterType="java.util.Map">
 		INSERT INTO PAO_ITEM(PI_SEQ, ITEM_SEQ, PI_QTY, PAO_SEQ) VALUES(PI_SEQ.NEXTVAL, #{item_seq}, #{pi_qty}, PAO_SEQ.CURRVAL)
  	</insert>
  	
  	<!-- 담당자 : 발주 대기 승인 처리 -->
  	<update id="approvePao" parameterType="java.lang.String">
  		UPDATE PAO
		SET PS_CODE = '2'
		WHERE PAO_SEQ = #{pao_seq}
  	</update>
  	
  	<!-- 업주 : 발주 승인 완료 처리 -->
  	<update id="completePao" parameterType="java.lang.String">
  		UPDATE PAO
		SET PS_CODE = '3'
		WHERE PAO_SEQ = #{pao_seq}
  	</update>
  	
  	<!-- 업주 : 발주 대기 취소 처리 -->
  	<update id="canclePao" parameterType="java.lang.String">
  		UPDATE PAO
		SET PS_CODE = '0'
		WHERE PAO_SEQ = #{pao_seq}
  	</update>
  	
</mapper>
